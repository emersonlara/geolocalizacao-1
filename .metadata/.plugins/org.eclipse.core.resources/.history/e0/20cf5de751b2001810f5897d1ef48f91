package com.aplicacao.geolocalizacao.api.controller;

import javax.annotation.Resource;
import javax.jws.WebService;
import javax.servlet.http.HttpServletRequest;
import javax.xml.ws.WebServiceContext;
import javax.xml.ws.handler.MessageContext;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.aplicacao.geolocalizacao.api.model.ClienteEntity;
import com.aplicacao.geolocalizacao.api.repository.ClienteRepository;
import com.aplicacao.geolocalizacao.api.service.ClienteService;
import com.aplicacao.geolocalizacao.api.util.WebUtils;

@RestController
@RequestMapping(path = "/cliente")
public class ClienteController {
	
	@Autowired
	private ClienteRepository repository;
	
	@Autowired
	private ClienteService servico;
	
	public Iterable<ClienteEntity> findByAllCliente() {
		return  repository.findAll();
	}
	
	
	@PostMapping
	public ResponseEntity<?> salvarCliente(@RequestBody  ClienteEntity clienteEntity){
		ClienteEntity clienteSalvo = repository.save(clienteEntity);
		return ResponseEntity.status(HttpStatus.CREATED).body(clienteSalvo);
	}
	
	@PutMapping("/{codigo}")
	public ResponseEntity<ClienteEntity> atualizarCliente(@PathVariable Long codigo, @RequestBody ClienteEntity clienteEntity){
		ClienteEntity clienteSalvo = servico.atualizarCliente(codigo, clienteEntity);
		
		return ResponseEntity.ok(clienteSalvo);
	}
	
	
	@GetMapping("/{codigo}")
	public ResponseEntity<?> buscarPorCodigo(@PathVariable Long codigo){
		ClienteEntity clienteSalvo = repository.findOne(codigo);
		return clienteSalvo!=null ? ResponseEntity.ok(clienteSalvo) : ResponseEntity.notFound().build();
	}

}
